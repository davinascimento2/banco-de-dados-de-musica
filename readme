üéµ BANCO DE DADOS DE M√öSICA
üìù INTRODU√á√ÉO
Este projeto tem como objetivo criar um banco de dados simples para armazenar informa√ß√µes sobre m√∫sicas, incluindo t√≠tulo, artista, √°lbum e ano de lan√ßamento.

‚öôÔ∏è FUNCIONALIDADES
Adicionar novas m√∫sicas ao banco de dados.
Listar todas as m√∫sicas cadastradas.
Buscar m√∫sicas por t√≠tulo ou artista.
Remover m√∫sicas do banco de dados.
üíª TECNOLOGIAS UTILIZADAS
Linguagem de programa√ß√£o: Python 3.x
Banco de dados: SQLite
üöÄ COMO UTILIZAR O PROJETO
bash
Copiar c√≥digo
git clone https://github.com/seuusuario/banco-dados-musica.git
cd banco-dados-musica
python banco_de_dados.py
üí° C√ìDIGO DO PROJETO
python
Copiar c√≥digo
import sqlite3

def conectar():
    conn = sqlite3.connect('musicas.db')
    return conn

def criar_tabela(conn):
    cursor = conn.cursor()
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS musicas (
        id INTEGER PRIMARY KEY,
        titulo TEXT NOT NULL,
        artista TEXT NOT NULL,
        album TEXT NOT NULL,
        ano INTEGER NOT NULL
    )
    ''')
    conn.commit()

def adicionar_musica(conn, titulo, artista, album, ano):
    cursor = conn.cursor()
    cursor.execute('''
    INSERT INTO musicas (titulo, artista, album, ano)
    VALUES (?, ?, ?, ?)
    ''', (titulo, artista, album, ano))
    conn.commit()

def listar_musicas(conn):
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM musicas')
    return cursor.fetchall()

def buscar_musica(conn, titulo):
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM musicas WHERE titulo = ?', (titulo,))
    return cursor.fetchall()

def remover_musica(conn, id):
    cursor = conn.cursor()
    cursor.execute('DELETE FROM musicas WHERE id = ?', (id,))
    conn.commit()

if __name__ == "__main__":
    conn = conectar()
    criar_tabela(conn)
    # Adicionar intera√ß√µes com o usu√°rio aqui para usar as fun√ß√µes
    conn.close()
